include Makefile.internal

%.o: %.c
	$(Q)$(CC) -std=c99 $(CFLAGS) -c $< -o $@
	@echo 'CC  $@'

%.opp: %.cpp
	$(Q)$(CXX) $(CFLAGS) $(CXXFLAGS) $(EASTL_CXXFLAGS) -c $< -o $@
	@echo 'CXX $@'

check-driver-env:
ifndef DRIVER_TARGET
	$(error DRIVER_TARGET is undefined)
endif
ifndef DRIVER_DIR
	$(error DRIVER_DIR is undefined)
endif
ifndef DRIVER_OBJECTS
	$(error DRIVER_OBJECTS is undefined)
endif

check-user-env:
ifndef USER_TARGET
	$(error USER_TARGET is undefined)
endif
ifndef USER_DIR
	$(error USER_DIR is undefined)
endif
ifndef USER_OBJECTS
	$(error USER_OBJECTS is undefined)
endif

driver-c: check-driver-env deps $(addprefix $(DRIVER_DIR)/,$(DRIVER_OBJECTS))
	$(Q)$(CC) \
		$(DRIVER_LDFLAGS) \
		-o '$(DRIVER_DIR)/$(DRIVER_TARGET)' \
		$(addprefix $(DRIVER_DIR)/,$(DRIVER_OBJECTS)) \
		$(DRIVER_LIBS)
	@echo 'LD  $(DRIVER_DIR)/$(DRIVER_TARGET)'

user-c: check-user-env deps $(addprefix $(USER_DIR)/,$(USER_OBJECTS))
	$(Q)$(CC) \
		$(USER_LDFLAGS) \
		-o '$(USER_DIR)/$(USER_TARGET)' \
		$(addprefix $(USER_DIR)/,$(USER_OBJECTS))
	@echo 'LD  $(USER_DIR)/$(USER_TARGET)'

driver-cpp: check-driver-env deps \
	$(DRIVER_ADDITIONAL_HDRS) $(DRIVER_ADDITIONAL_OBJS) \
	$(EASTL_STATIC_LIB) $(DRIVER_EASTL_COMPAT) \
	$(addprefix $(DRIVER_DIR)/,$(DRIVER_OBJECTS))

	$(Q)$(CXX) \
		$(CXXFLAGS) \
		$(EASTL_CXXFLAGS) \
		$(DRIVER_LDFLAGS) \
		-o '$(DRIVER_DIR)/$(DRIVER_TARGET)' \
		$(addprefix $(DRIVER_DIR)/,$(DRIVER_OBJECTS)) \
		$(DRIVER_ADDITIONAL_OBJS) $(DRIVER_EASTL_COMPAT) $(EASTL_STATIC_LIB) $(DRIVER_LIBS)
	@echo 'LD  $(DRIVER_DIR)/$(DRIVER_TARGET)'

user-cpp: check-user-env deps \
	$(EASTL_STATIC_LIB) $(USER_EASTL_COMPAT) \
	$(addprefix $(USER_DIR)/,$(USER_OBJECTS))

	$(Q)$(CXX) \
		$(CXXFLAGS) \
		$(EASTL_CXXFLAGS) \
		$(USER_LDFLAGS) \
		-o '$(USER_DIR)/$(USER_TARGET)' \
		$(addprefix $(USER_DIR)/,$(USER_OBJECTS)) \
		$(USER_EASTL_COMPAT) $(EASTL_STATIC_LIB)
	@echo 'LD  $(USER_DIR)/$(USER_TARGET)'

check-env-install:
ifndef TARGETS
	$(error TARGETS is undefined)
endif

install: check-env-install $(addprefix $(DRIVER_DIR)/,$(TARGETS))
	$(INSTALL) -d '$(DESTDIR)/'
	for target in $(addprefix $(DRIVER_DIR)/,$(TARGETS)); do \
		$(INSTALL) -s --strip-program='$(dir $(CC))/x86_64-w64-mingw32-strip' "$$target" '$(DESTDIR)'; \
	done

install-sign: check-env-install $(SIGNTOOL_PREFIX) $(addprefix $(DRIVER_DIR)/,$(TARGETS))
	$(INSTALL) -d '$(DESTDIR)/'
	test -x '$(shell which $(SIGNTOOL))' || { \
		printf '\n  *** %s ***\n\n' "$(SIGNTOOL) does not exist / not in your PATH / not executable."; \
		false; \
	}
	for target in $(TARGETS); do \
		rm -f "$(DESTDIR)/$$target"; \
		$(SIGNTOOL) sign -pkcs12 $(SIGNTOOL_PREFIX)-code.p12 -ac $(SIGNTOOL_PREFIX)-ca-cert.pem \
			-in "$(DRIVER_DIR)/$$target" \
			-out "$(DESTDIR)/$$target"; \
	done
	$(INSTALL) "$(SIGNTOOL_PREFIX)-ca-cert.pem" '$(DESTDIR)/$(SIGNTOOL_PREFIX)-ca-cert.crt'

.PHONY: check-driver-env check-user-env driver-c driver-cpp user-c user-cpp check-env-install install install-sign
