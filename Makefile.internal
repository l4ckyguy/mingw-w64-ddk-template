Q = @
ifeq ($(Q),)
CMAKE_Q = VERBOSE=1
endif
ifeq ($(DPP_EXTERNAL_MAKEFILE),)
DPP_EXTERNAL_MAKEFILE := .
endif
LOCAL_MINGW64_BUILD_SCRIPT := $(DPP_EXTERNAL_MAKEFILE)/mingw-w64-build/mingw-w64-build
LOCAL_MINGW64_BUILD_DIR := $(DPP_EXTERNAL_MAKEFILE)/x86_64-w64-mingw32
LOCAL_MINGW64_CC := $(LOCAL_MINGW64_BUILD_DIR)/bin/x86_64-w64-mingw32-gcc
SIGNTOOL_PREFIX := codesign

INSTALL = install
CMAKE = cmake
CC = $(LOCAL_MINGW64_CC)
CXX = $(dir $(CC))/x86_64-w64-mingw32-g++
DDK_INCLUDE_DIR = $(dir $(CC))../x86_64-w64-mingw32/include/ddk
CFLAGS := -Wall -Wextra -m64 -shared \
	-I. -I$(DDK_INCLUDE_DIR) \
	-D__INTRINSIC_DEFINED_InterlockedBitTestAndSet \
	-D__INTRINSIC_DEFINED_InterlockedBitTestAndReset
CXXFLAGS := -fno-exceptions -fno-rtti
EASTL_CXXFLAGS := -IEASTL/include -IEASTL/test/packages/EABase/include/Common \
	-DEASTL_THREAD_SUPPORT_AVAILABLE=0 \
	-DEASTL_EXCEPTIONS_ENABLED=0 \
	-DEASTL_ASSERT_ENABLED=0 \
	-DEA_COMPILER_NO_EXCEPTIONS=1 \
	-DEA_COMPILER_MANAGED_CPP=1 \
	-Wno-unknown-pragmas \
	-Wno-deprecated-copy
DRIVER_LDFLAGS := -Wl,--subsystem,native \
	-Wl,--image-base,0x140000000 \
	-Wl,--dynamicbase -Wl,--nxcompat \
	-Wl,--file-alignment,0x200 \
	-Wl,--section-alignment,0x1000 \
	-Wl,--stack,0x100000 \
	-Wl,--entry,DriverEntry \
	-Wl,--gc-sections \
	-nostartfiles -nostdlib
DRIVER_LIBS := -lntoskrnl -lhal

ADDITIONAL_OBJS := DriverThread.opp
ADDITIONAL_HDRS := DriverThread.hpp
EASTL_STATIC_LIB := EASTL-build/libEASTL.a
EASTL_COMPAT := EASTL-compat/kcrt.opp
DEPS_STAMP := .deps-built

deps-print-local-notice: $(CC)
ifeq ($(CC),$(LOCAL_MINGW64_CC))
	@echo
	@echo "-- [Build Config]"
	@echo "-- CC : $(realpath $(CC))"
	@echo "-- CXX: $(realpath $(CXX))"
	@echo "-- DDK: $(realpath $(DDK_INCLUDE_DIR))"
	@echo
endif

$(LOCAL_MINGW64_BUILD_SCRIPT):
ifeq ($(CC),$(LOCAL_MINGW64_CC))
	@echo
	@echo "------------------------------------------------------------------------------"
	@echo "-- ./mingw-w64-build/mingw-w64-build does not exist, clonging git submodule --"
	@echo "------------------------------------------------------------------------------"
	@echo
	git submodule update --init mingw-w64-build
endif

$(LOCAL_MINGW64_CC): $(LOCAL_MINGW64_BUILD_SCRIPT)
ifeq ($(CC),$(LOCAL_MINGW64_CC))
	@echo
	@echo "----------------------------------------------------------------------------------------"
	@echo "-- ./x86_64-w64-mingw32/bin/x86_64-w64-mingw32-gcc does not exist, building toolchain --"
	@echo "----------------------------------------------------------------------------------------"
	@echo
	env -i ./mingw-w64-build/mingw-w64-build x86_64
endif

$(DEPS_STAMP): $(LOCAL_MINGW64_BUILD_SCRIPT) $(LOCAL_MINGW64_CC)
	touch $(DEPS_STAMP)

deps: deps-print-local-notice $(DEPS_STAMP)

$(EASTL_STATIC_LIB): $(DEPS_STAMP)
	mkdir -p EASTL-build
	cd EASTL-build && \
		$(CMAKE) ../EASTL \
			-DCMAKE_CXX_COMPILER="$(realpath $(CXX))" \
			-DCMAKE_SYSTEM_NAME="Windows" \
			-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
			-DCMAKE_CXX_FLAGS='-ffunction-sections -fdata-sections $(CXXFLAGS) $(EASTL_CXXFLAGS)' && \
		$(MAKE) $(CMAKE_Q)

$(SIGNTOOL_PREFIX)-code.p12:
	./create_codesign_ca.sh $(SIGNTOOL_PREFIX)

$(SIGNTOOL_PREFIX): $(SIGNTOOL_PREFIX)-code.p12

distclean: clean
	rm -f $(DEPS_STAMP)
	rm -rf $(LOCAL_MINGW64_BUILD_DIR)
	rm -f codesign*
	git submodule deinit --all

clean:
	rm -f $(EASTL_COMPAT) $(EASTL_STATIC_LIB)
	rm -f $(ADDITIONAL_OBJS)
	rm -rf EASTL-build

.PHONY: deps distclean-deps clean-deps
